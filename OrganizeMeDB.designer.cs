#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Organize_Me
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OrganizeMeDB")]
	public partial class OrganizeMeDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChild(Child instance);
    partial void UpdateChild(Child instance);
    partial void DeleteChild(Child instance);
    partial void InsertParent(Parent instance);
    partial void UpdateParent(Parent instance);
    partial void DeleteParent(Parent instance);
    partial void InsertSpouse(Spouse instance);
    partial void UpdateSpouse(Spouse instance);
    partial void DeleteSpouse(Spouse instance);
    partial void InsertTarget(Target instance);
    partial void UpdateTarget(Target instance);
    partial void DeleteTarget(Target instance);
    partial void InsertTask(Task instance);
    partial void UpdateTask(Task instance);
    partial void DeleteTask(Task instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public OrganizeMeDBDataContext() : 
				base(global::Organize_Me.Properties.Settings.Default.OrganizeMeDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public OrganizeMeDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrganizeMeDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrganizeMeDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrganizeMeDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Child> Childs
		{
			get
			{
				return this.GetTable<Child>();
			}
		}
		
		public System.Data.Linq.Table<Parent> Parents
		{
			get
			{
				return this.GetTable<Parent>();
			}
		}
		
		public System.Data.Linq.Table<Spouse> Spouses
		{
			get
			{
				return this.GetTable<Spouse>();
			}
		}
		
		public System.Data.Linq.Table<Target> Targets
		{
			get
			{
				return this.GetTable<Target>();
			}
		}
		
		public System.Data.Linq.Table<Task> Tasks
		{
			get
			{
				return this.GetTable<Task>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Child")]
	public partial class Child : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdUser;
		
		private string _First_Name;
		
		private string _School_Name;
		
		private string _Education_Level;
		
		private string _Gender;
		
		private string _Last_Name;
		
		private System.Nullable<System.DateTime> _Birth_Date;
		
		private System.Nullable<int> _Home_School_Dist;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUserChanging(System.Nullable<int> value);
    partial void OnIdUserChanged();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void OnSchool_NameChanging(string value);
    partial void OnSchool_NameChanged();
    partial void OnEducation_LevelChanging(string value);
    partial void OnEducation_LevelChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    partial void OnBirth_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirth_DateChanged();
    partial void OnHome_School_DistChanging(System.Nullable<int> value);
    partial void OnHome_School_DistChanged();
    #endregion
		
		public Child()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="Int")]
		public System.Nullable<int> IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="VarChar(50)")]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this.OnFirst_NameChanging(value);
					this.SendPropertyChanging();
					this._First_Name = value;
					this.SendPropertyChanged("First_Name");
					this.OnFirst_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_School_Name", DbType="VarChar(50)")]
		public string School_Name
		{
			get
			{
				return this._School_Name;
			}
			set
			{
				if ((this._School_Name != value))
				{
					this.OnSchool_NameChanging(value);
					this.SendPropertyChanging();
					this._School_Name = value;
					this.SendPropertyChanged("School_Name");
					this.OnSchool_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Education_Level", DbType="VarChar(50)")]
		public string Education_Level
		{
			get
			{
				return this._Education_Level;
			}
			set
			{
				if ((this._Education_Level != value))
				{
					this.OnEducation_LevelChanging(value);
					this.SendPropertyChanging();
					this._Education_Level = value;
					this.SendPropertyChanged("Education_Level");
					this.OnEducation_LevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(10)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="VarChar(50)")]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this.OnLast_NameChanging(value);
					this.SendPropertyChanging();
					this._Last_Name = value;
					this.SendPropertyChanged("Last_Name");
					this.OnLast_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birth_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Birth_Date
		{
			get
			{
				return this._Birth_Date;
			}
			set
			{
				if ((this._Birth_Date != value))
				{
					this.OnBirth_DateChanging(value);
					this.SendPropertyChanging();
					this._Birth_Date = value;
					this.SendPropertyChanged("Birth_Date");
					this.OnBirth_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Home_School_Dist", DbType="Int")]
		public System.Nullable<int> Home_School_Dist
		{
			get
			{
				return this._Home_School_Dist;
			}
			set
			{
				if ((this._Home_School_Dist != value))
				{
					this.OnHome_School_DistChanging(value);
					this.SendPropertyChanging();
					this._Home_School_Dist = value;
					this.SendPropertyChanged("Home_School_Dist");
					this.OnHome_School_DistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Child", Storage="_User", ThisKey="IdUser", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Childs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Childs.Add(this);
						this._IdUser = value.Id;
					}
					else
					{
						this._IdUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Parent")]
	public partial class Parent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdUser;
		
		private string _Father_FName;
		
		private string _Mother_FName;
		
		private string _Mother_LName;
		
		private string _Housing;
		
		private string _Father_LName;
		
		private System.Nullable<System.DateTime> _MotherBDate;
		
		private System.Nullable<System.DateTime> _FatherBDate;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUserChanging(int value);
    partial void OnIdUserChanged();
    partial void OnFather_FNameChanging(string value);
    partial void OnFather_FNameChanged();
    partial void OnMother_FNameChanging(string value);
    partial void OnMother_FNameChanged();
    partial void OnMother_LNameChanging(string value);
    partial void OnMother_LNameChanged();
    partial void OnHousingChanging(string value);
    partial void OnHousingChanged();
    partial void OnFather_LNameChanging(string value);
    partial void OnFather_LNameChanged();
    partial void OnMotherBDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMotherBDateChanged();
    partial void OnFatherBDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFatherBDateChanged();
    #endregion
		
		public Parent()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="Int NOT NULL")]
		public int IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Father_FName", DbType="VarChar(50)")]
		public string Father_FName
		{
			get
			{
				return this._Father_FName;
			}
			set
			{
				if ((this._Father_FName != value))
				{
					this.OnFather_FNameChanging(value);
					this.SendPropertyChanging();
					this._Father_FName = value;
					this.SendPropertyChanged("Father_FName");
					this.OnFather_FNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mother_FName", DbType="VarChar(50)")]
		public string Mother_FName
		{
			get
			{
				return this._Mother_FName;
			}
			set
			{
				if ((this._Mother_FName != value))
				{
					this.OnMother_FNameChanging(value);
					this.SendPropertyChanging();
					this._Mother_FName = value;
					this.SendPropertyChanged("Mother_FName");
					this.OnMother_FNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mother_LName", DbType="VarChar(50)")]
		public string Mother_LName
		{
			get
			{
				return this._Mother_LName;
			}
			set
			{
				if ((this._Mother_LName != value))
				{
					this.OnMother_LNameChanging(value);
					this.SendPropertyChanging();
					this._Mother_LName = value;
					this.SendPropertyChanged("Mother_LName");
					this.OnMother_LNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Housing", DbType="VarChar(10)")]
		public string Housing
		{
			get
			{
				return this._Housing;
			}
			set
			{
				if ((this._Housing != value))
				{
					this.OnHousingChanging(value);
					this.SendPropertyChanging();
					this._Housing = value;
					this.SendPropertyChanged("Housing");
					this.OnHousingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Father_LName", DbType="NChar(10)")]
		public string Father_LName
		{
			get
			{
				return this._Father_LName;
			}
			set
			{
				if ((this._Father_LName != value))
				{
					this.OnFather_LNameChanging(value);
					this.SendPropertyChanging();
					this._Father_LName = value;
					this.SendPropertyChanged("Father_LName");
					this.OnFather_LNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotherBDate", DbType="Date")]
		public System.Nullable<System.DateTime> MotherBDate
		{
			get
			{
				return this._MotherBDate;
			}
			set
			{
				if ((this._MotherBDate != value))
				{
					this.OnMotherBDateChanging(value);
					this.SendPropertyChanging();
					this._MotherBDate = value;
					this.SendPropertyChanged("MotherBDate");
					this.OnMotherBDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherBDate", DbType="Date")]
		public System.Nullable<System.DateTime> FatherBDate
		{
			get
			{
				return this._FatherBDate;
			}
			set
			{
				if ((this._FatherBDate != value))
				{
					this.OnFatherBDateChanging(value);
					this.SendPropertyChanging();
					this._FatherBDate = value;
					this.SendPropertyChanged("FatherBDate");
					this.OnFatherBDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Parent", Storage="_User", ThisKey="IdUser", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Parents.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Parents.Add(this);
						this._IdUser = value.Id;
					}
					else
					{
						this._IdUser = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Spouse")]
	public partial class Spouse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdUser;
		
		private string _First_Name;
		
		private string _Last_Name;
		
		private System.Nullable<System.DateTime> _BDate;
		
		private string _Job;
		
		private string _Health;
		
		private string _Gender;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUserChanging(System.Nullable<int> value);
    partial void OnIdUserChanged();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    partial void OnBDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBDateChanged();
    partial void OnJobChanging(string value);
    partial void OnJobChanged();
    partial void OnHealthChanging(string value);
    partial void OnHealthChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    #endregion
		
		public Spouse()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="Int")]
		public System.Nullable<int> IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="VarChar(50)")]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this.OnFirst_NameChanging(value);
					this.SendPropertyChanging();
					this._First_Name = value;
					this.SendPropertyChanged("First_Name");
					this.OnFirst_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="VarChar(50)")]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this.OnLast_NameChanging(value);
					this.SendPropertyChanging();
					this._Last_Name = value;
					this.SendPropertyChanged("Last_Name");
					this.OnLast_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDate", DbType="Date")]
		public System.Nullable<System.DateTime> BDate
		{
			get
			{
				return this._BDate;
			}
			set
			{
				if ((this._BDate != value))
				{
					this.OnBDateChanging(value);
					this.SendPropertyChanging();
					this._BDate = value;
					this.SendPropertyChanged("BDate");
					this.OnBDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Job", DbType="VarChar(50)")]
		public string Job
		{
			get
			{
				return this._Job;
			}
			set
			{
				if ((this._Job != value))
				{
					this.OnJobChanging(value);
					this.SendPropertyChanging();
					this._Job = value;
					this.SendPropertyChanged("Job");
					this.OnJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Health", DbType="VarChar(50)")]
		public string Health
		{
			get
			{
				return this._Health;
			}
			set
			{
				if ((this._Health != value))
				{
					this.OnHealthChanging(value);
					this.SendPropertyChanging();
					this._Health = value;
					this.SendPropertyChanged("Health");
					this.OnHealthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(50)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Spouse", Storage="_User", ThisKey="IdUser", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Spouses.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Spouses.Add(this);
						this._IdUser = value.Id;
					}
					else
					{
						this._IdUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Target")]
	public partial class Target : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Relation;
		
		private EntitySet<Task> _Tasks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRelationChanging(string value);
    partial void OnRelationChanged();
    #endregion
		
		public Target()
		{
			this._Tasks = new EntitySet<Task>(new Action<Task>(this.attach_Tasks), new Action<Task>(this.detach_Tasks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Relation", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Relation
		{
			get
			{
				return this._Relation;
			}
			set
			{
				if ((this._Relation != value))
				{
					this.OnRelationChanging(value);
					this.SendPropertyChanging();
					this._Relation = value;
					this.SendPropertyChanged("Relation");
					this.OnRelationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Target_Task", Storage="_Tasks", ThisKey="Id,Relation", OtherKey="IdTarget,relationTarget")]
		public EntitySet<Task> Tasks
		{
			get
			{
				return this._Tasks;
			}
			set
			{
				this._Tasks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tasks(Task entity)
		{
			this.SendPropertyChanging();
			entity.Target = this;
		}
		
		private void detach_Tasks(Task entity)
		{
			this.SendPropertyChanging();
			entity.Target = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Task")]
	public partial class Task : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdUser;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _Start_Date;
		
		private System.Nullable<System.DateTime> _End_Date;
		
		private string _Description;
		
		private string _Type;
		
		private int _IdTarget;
		
		private string _relationTarget;
		
		private string _StartTime;
		
		private string _EndTime;
		
		private System.Nullable<double> _ToleratedTime;
		
		private string _TaskCompleted;
		
		private EntityRef<Target> _Target;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUserChanging(int value);
    partial void OnIdUserChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStart_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnStart_DateChanged();
    partial void OnEnd_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnEnd_DateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnIdTargetChanging(int value);
    partial void OnIdTargetChanged();
    partial void OnrelationTargetChanging(string value);
    partial void OnrelationTargetChanged();
    partial void OnStartTimeChanging(string value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(string value);
    partial void OnEndTimeChanged();
    partial void OnToleratedTimeChanging(System.Nullable<double> value);
    partial void OnToleratedTimeChanged();
    partial void OnTaskCompletedChanging(string value);
    partial void OnTaskCompletedChanged();
    #endregion
		
		public Task()
		{
			this._Target = default(EntityRef<Target>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Start_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Start_Date
		{
			get
			{
				return this._Start_Date;
			}
			set
			{
				if ((this._Start_Date != value))
				{
					this.OnStart_DateChanging(value);
					this.SendPropertyChanging();
					this._Start_Date = value;
					this.SendPropertyChanged("Start_Date");
					this.OnStart_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_End_Date", DbType="Date")]
		public System.Nullable<System.DateTime> End_Date
		{
			get
			{
				return this._End_Date;
			}
			set
			{
				if ((this._End_Date != value))
				{
					this.OnEnd_DateChanging(value);
					this.SendPropertyChanging();
					this._End_Date = value;
					this.SendPropertyChanged("End_Date");
					this.OnEnd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTarget", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdTarget
		{
			get
			{
				return this._IdTarget;
			}
			set
			{
				if ((this._IdTarget != value))
				{
					if (this._Target.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTargetChanging(value);
					this.SendPropertyChanging();
					this._IdTarget = value;
					this.SendPropertyChanged("IdTarget");
					this.OnIdTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_relationTarget", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string relationTarget
		{
			get
			{
				return this._relationTarget;
			}
			set
			{
				if ((this._relationTarget != value))
				{
					if (this._Target.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnrelationTargetChanging(value);
					this.SendPropertyChanging();
					this._relationTarget = value;
					this.SendPropertyChanged("relationTarget");
					this.OnrelationTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="VarChar(6)")]
		public string StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="VarChar(6)")]
		public string EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToleratedTime", DbType="Float")]
		public System.Nullable<double> ToleratedTime
		{
			get
			{
				return this._ToleratedTime;
			}
			set
			{
				if ((this._ToleratedTime != value))
				{
					this.OnToleratedTimeChanging(value);
					this.SendPropertyChanging();
					this._ToleratedTime = value;
					this.SendPropertyChanged("ToleratedTime");
					this.OnToleratedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskCompleted", DbType="VarChar(4)")]
		public string TaskCompleted
		{
			get
			{
				return this._TaskCompleted;
			}
			set
			{
				if ((this._TaskCompleted != value))
				{
					this.OnTaskCompletedChanging(value);
					this.SendPropertyChanging();
					this._TaskCompleted = value;
					this.SendPropertyChanged("TaskCompleted");
					this.OnTaskCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Target_Task", Storage="_Target", ThisKey="IdTarget,relationTarget", OtherKey="Id,Relation", IsForeignKey=true)]
		public Target Target
		{
			get
			{
				return this._Target.Entity;
			}
			set
			{
				Target previousValue = this._Target.Entity;
				if (((previousValue != value) 
							|| (this._Target.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Target.Entity = null;
						previousValue.Tasks.Remove(this);
					}
					this._Target.Entity = value;
					if ((value != null))
					{
						value.Tasks.Add(this);
						this._IdTarget = value.Id;
						this._relationTarget = value.Relation;
					}
					else
					{
						this._IdTarget = default(int);
						this._relationTarget = default(string);
					}
					this.SendPropertyChanged("Target");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Task", Storage="_User", ThisKey="IdUser", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Tasks.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Tasks.Add(this);
						this._IdUser = value.Id;
					}
					else
					{
						this._IdUser = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Password;
		
		private string _First_Name;
		
		private string _Last_Name;
		
		private string _Gender;
		
		private string _Job;
		
		private System.Data.Linq.Binary _Photo;
		
		private string _Mail;
		
		private string _Address;
		
		private string _Marital_Status;
		
		private System.Nullable<int> _Children_Num;
		
		private System.Nullable<System.DateTime> _BDate;
		
		private EntitySet<Child> _Childs;
		
		private EntitySet<Parent> _Parents;
		
		private EntitySet<Spouse> _Spouses;
		
		private EntitySet<Task> _Tasks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnJobChanging(string value);
    partial void OnJobChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnMarital_StatusChanging(string value);
    partial void OnMarital_StatusChanged();
    partial void OnChildren_NumChanging(System.Nullable<int> value);
    partial void OnChildren_NumChanged();
    partial void OnBDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBDateChanged();
    #endregion
		
		public User()
		{
			this._Childs = new EntitySet<Child>(new Action<Child>(this.attach_Childs), new Action<Child>(this.detach_Childs));
			this._Parents = new EntitySet<Parent>(new Action<Parent>(this.attach_Parents), new Action<Parent>(this.detach_Parents));
			this._Spouses = new EntitySet<Spouse>(new Action<Spouse>(this.attach_Spouses), new Action<Spouse>(this.detach_Spouses));
			this._Tasks = new EntitySet<Task>(new Action<Task>(this.attach_Tasks), new Action<Task>(this.detach_Tasks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="VarChar(50)")]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this.OnFirst_NameChanging(value);
					this.SendPropertyChanging();
					this._First_Name = value;
					this.SendPropertyChanged("First_Name");
					this.OnFirst_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="VarChar(50)")]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this.OnLast_NameChanging(value);
					this.SendPropertyChanging();
					this._Last_Name = value;
					this.SendPropertyChanged("Last_Name");
					this.OnLast_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(50)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Job", DbType="VarChar(50)")]
		public string Job
		{
			get
			{
				return this._Job;
			}
			set
			{
				if ((this._Job != value))
				{
					this.OnJobChanging(value);
					this.SendPropertyChanging();
					this._Job = value;
					this.SendPropertyChanged("Job");
					this.OnJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail", DbType="VarChar(50)")]
		public string Mail
		{
			get
			{
				return this._Mail;
			}
			set
			{
				if ((this._Mail != value))
				{
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marital_Status", DbType="VarChar(50)")]
		public string Marital_Status
		{
			get
			{
				return this._Marital_Status;
			}
			set
			{
				if ((this._Marital_Status != value))
				{
					this.OnMarital_StatusChanging(value);
					this.SendPropertyChanging();
					this._Marital_Status = value;
					this.SendPropertyChanged("Marital_Status");
					this.OnMarital_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Children_Num", DbType="Int")]
		public System.Nullable<int> Children_Num
		{
			get
			{
				return this._Children_Num;
			}
			set
			{
				if ((this._Children_Num != value))
				{
					this.OnChildren_NumChanging(value);
					this.SendPropertyChanging();
					this._Children_Num = value;
					this.SendPropertyChanged("Children_Num");
					this.OnChildren_NumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDate", DbType="Date")]
		public System.Nullable<System.DateTime> BDate
		{
			get
			{
				return this._BDate;
			}
			set
			{
				if ((this._BDate != value))
				{
					this.OnBDateChanging(value);
					this.SendPropertyChanging();
					this._BDate = value;
					this.SendPropertyChanged("BDate");
					this.OnBDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Child", Storage="_Childs", ThisKey="Id", OtherKey="IdUser")]
		public EntitySet<Child> Childs
		{
			get
			{
				return this._Childs;
			}
			set
			{
				this._Childs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Parent", Storage="_Parents", ThisKey="Id", OtherKey="IdUser")]
		public EntitySet<Parent> Parents
		{
			get
			{
				return this._Parents;
			}
			set
			{
				this._Parents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Spouse", Storage="_Spouses", ThisKey="Id", OtherKey="IdUser")]
		public EntitySet<Spouse> Spouses
		{
			get
			{
				return this._Spouses;
			}
			set
			{
				this._Spouses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Task", Storage="_Tasks", ThisKey="Id", OtherKey="IdUser")]
		public EntitySet<Task> Tasks
		{
			get
			{
				return this._Tasks;
			}
			set
			{
				this._Tasks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Childs(Child entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Childs(Child entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Parents(Parent entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Parents(Parent entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Spouses(Spouse entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Spouses(Spouse entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Tasks(Task entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Tasks(Task entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
}
#pragma warning restore 1591
